/*
 * =====================================================================================
 *
 *       Filename:  anagram.h
 *
 *    Description:  Header file for anagram library
 *
 *        Version:  1.0
 *        Created:  09/11/2015 21:33:50
 *       Revision:  none
 *       Compiler:  gcc
 *
 *         Author:  Guillerme Duvillié (mfreeze), gduvillie@openmailbox.org
 *   Organization:  
 *
 * =====================================================================================
 */

#ifndef ANAGRAM_H
#define ANAGRAM_H


#include <stdio.h>
#include <errno.h>
#include <string.h>
#include <time.h>

#include "debug.h"

#define MAX_LEN 1000
#define MAX_WORD_LEN 50


/*
 * =====================================================================================
 *    Structure:  anagram_t
 *  Description:  Structure contenant les informations nécessaires à un anagramme
 *                  - char liste[]          : chaîne de caractère contenant un mot et 
 *                                              tous ses anagrammes
 *                  - char mot_courant[]    : chaîne de caractère contenant une copie de 
 *                                              l'anagramme en cours
 *                  - char *deb_mot_courant : pointeur sur le début du mot proposé aux 
 *                                              clients
 *                  - int longueur_mot      : la longueur du mot et de ses anagrammes
 *                  - int nombre_mot        : le nombre de mot que contient la ligne
 * =====================================================================================
 */
typedef struct anagram {
    char liste[MAX_LEN], mot_courant[MAX_WORD_LEN];
    char *deb_mot_courant;
    int  longueur_mot, nombre_mot;
} anagram_t;


/*
 * =====================================================================================
 *    Structure:  dict_t
 *  Description:  Structure contenant les informations relatives à un dictionnaire
 *                  - char chemin[]     : chaîne de caractères contenant le chemin vers 
 *                                          le dictionnaire
 *                  - int nombre_lignes : nombre d'entrées du dictionnaire
 * =====================================================================================
 */
typedef struct dict {
    char chemin[MAX_LEN];
    int  nombre_lignes;
} dict_t;


int initialise_anagramme (anagram_t *, dict_t *);
int est_une_solution     (const anagram_t *, const char *);

int initialise_dico      (dict_t *, const char *);

#endif
